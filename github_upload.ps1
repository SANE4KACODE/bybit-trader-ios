# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ Bybit Trader iOS –Ω–∞ GitHub
# –ê–≤—Ç–æ—Ä: AI Assistant
# –î–∞—Ç–∞: $(Get-Date -Format "yyyy-MM-dd")

param(
    [Parameter(Mandatory=$true)]
    [string]$GitHubUsername,
    
    [Parameter(Mandatory=$false)]
    [string]$RepositoryName = "bybit-trader-ios",
    
    [Parameter(Mandatory=$false)]
    [string]$ProjectPath = "C:\Users\Admin\OneDrive\Desktop\–ù–æ–≤–∞—è –ø–∞–ø–∫–∞ (4)"
)

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
$Green = "Green"
$Yellow = "Yellow"
$Cyan = "Cyan"
$Red = "Red"
$White = "White"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
function Write-ColorOutput {
    param(
        [string]$Message,
        [string]$Color = $White
    )
    Write-Host $Message -ForegroundColor $Color
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—à–∏–±–æ–∫
function Test-CommandSuccess {
    param(
        [string]$Command,
        [string]$ErrorMessage
    )
    
    if ($LASTEXITCODE -ne 0) {
        Write-ColorOutput "‚ùå –û—à–∏–±–∫–∞: $ErrorMessage" $Red
        Write-ColorOutput "–ö–æ–º–∞–Ω–¥–∞: $Command" $Red
        exit 1
    }
}

# –ù–∞—á–∞–ª–æ —Å–∫—Ä–∏–ø—Ç–∞
Write-ColorOutput "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø—Ä–æ–µ–∫—Ç–∞ Bybit Trader iOS –Ω–∞ GitHub..." $Green
Write-ColorOutput "üìÅ –ü—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É: $ProjectPath" $Cyan
Write-ColorOutput "üë§ GitHub –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $GitHubUsername" $Cyan
Write-ColorOutput "üì¶ –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: $RepositoryName" $Cyan
Write-ColorOutput ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
if (-not (Test-Path $ProjectPath)) {
    Write-ColorOutput "‚ùå –û—à–∏–±–∫–∞: –ü–∞–ø–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!" $Red
    Write-ColorOutput "–ü—É—Ç—å: $ProjectPath" $Red
    exit 1
}

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞
Write-ColorOutput "üìÅ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞..." $Yellow
Set-Location $ProjectPath
Write-ColorOutput "‚úÖ –¢–µ–∫—É—â–∞—è –ø–∞–ø–∫–∞: $(Get-Location)" $Green

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º
$isGitRepo = Test-Path ".git"
if ($isGitRepo) {
    Write-ColorOutput "üìÅ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω" $Cyan
} else {
    Write-ColorOutput "üìÅ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..." $Yellow
    git init
    Test-CommandSuccess "git init" "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"
    Write-ColorOutput "‚úÖ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω" $Green
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Git –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
Write-ColorOutput "‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä—è–µ–º Git –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..." $Yellow
$userName = git config user.name
$userEmail = git config user.email

if (-not $userName -or -not $userEmail) {
    Write-ColorOutput "‚ö†Ô∏è Git –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞" $Yellow
    Write-ColorOutput "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ Git –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º:" $Yellow
    Write-ColorOutput "git config user.name '–í–∞—à–µ –ò–º—è'" $Cyan
    Write-ColorOutput "git config user.email '–≤–∞—à.email@example.com'" $Cyan
    Write-ColorOutput ""
    Write-ColorOutput "–ù–∞–∂–º–∏—Ç–µ Enter –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏..." $Yellow
    Read-Host
} else {
    Write-ColorOutput "‚úÖ Git –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞:" $Green
    Write-ColorOutput "   –ò–º—è: $userName" $Cyan
    Write-ColorOutput "   Email: $userEmail" $Cyan
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º .gitignore
Write-ColorOutput "üîí –ü—Ä–æ–≤–µ—Ä—è–µ–º .gitignore —Ñ–∞–π–ª..." $Yellow
if (Test-Path ".gitignore") {
    Write-ColorOutput "‚úÖ .gitignore —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω" $Green
    $gitignoreContent = Get-Content ".gitignore" | Select-Object -First 10
    Write-ColorOutput "üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ .gitignore (–ø–µ—Ä–≤—ã–µ 10 —Å—Ç—Ä–æ–∫):" $Cyan
    $gitignoreContent | ForEach-Object { Write-ColorOutput "   $_" $Cyan }
} else {
    Write-ColorOutput "‚ö†Ô∏è .gitignore —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!" $Yellow
    Write-ColorOutput "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç—å .gitignore –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π" $Yellow
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
Write-ColorOutput "üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..." $Yellow
git status
Write-ColorOutput ""

# –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã
Write-ColorOutput "üìÅ –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..." $Yellow
git add .
Test-CommandSuccess "git add ." "–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"
Write-ColorOutput "‚úÖ –§–∞–π–ª—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã" $Green

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
Write-ColorOutput "üìä –°—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤:" $Yellow
git status
Write-ColorOutput ""

# –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–≤—ã–π –∫–æ–º–º–∏—Ç
Write-ColorOutput "üíæ –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–≤—ã–π –∫–æ–º–º–∏—Ç..." $Yellow
$commitMessage = @"
Initial commit: Bybit Trader iOS app

- Complete iOS trading application for Bybit exchange
- Real-time market data and charts
- Advanced animations and particle effects
- Subscription system with trial period
- AI chat integration for trading advice
- Comprehensive error handling and logging
- Local Core Data and cloud Supabase database
- Security features with biometric authentication
- Learning system with courses and articles
- Apple Sign In integration
- Price alerts and notifications
- Trade diary with Excel export
- Portfolio analytics and risk management
- Multi-language support (Russian/English)
- Modern SwiftUI interface with dark/light themes

Built with Swift 5.7+, iOS 15.0+, Xcode 14.0+
"@

git commit -m $commitMessage
Test-CommandSuccess "git commit" "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–æ–º–º–∏—Ç"
Write-ColorOutput "‚úÖ –ö–æ–º–º–∏—Ç —Å–æ–∑–¥–∞–Ω" $Green

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏
Write-ColorOutput "üìã –ò—Å—Ç–æ—Ä–∏—è –∫–æ–º–º–∏—Ç–æ–≤:" $Yellow
git log --oneline -5
Write-ColorOutput ""

# –î–æ–±–∞–≤–ª—è–µ–º —É–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
$remoteUrl = "https://github.com/$GitHubUsername/$RepositoryName.git"
Write-ColorOutput "üîó –î–æ–±–∞–≤–ª—è–µ–º —É–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..." $Yellow
Write-ColorOutput "URL: $remoteUrl" $Cyan

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –ª–∏ —É–∂–µ remote
$existingRemote = git remote get-url origin 2>$null
if ($existingRemote) {
    Write-ColorOutput "‚ö†Ô∏è –£–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω:" $Yellow
    Write-ColorOutput "   $existingRemote" $Cyan
    
    if ($existingRemote -ne $remoteUrl) {
        Write-ColorOutput "üîÑ –û–±–Ω–æ–≤–ª—è–µ–º URL —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..." $Yellow
        git remote set-url origin $remoteUrl
        Test-CommandSuccess "git remote set-url" "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å URL —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"
    }
} else {
    git remote add origin $remoteUrl
    Test-CommandSuccess "git remote add origin" "–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —É–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"
}

Write-ColorOutput "‚úÖ –£–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω" $Green

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
Write-ColorOutput "üîó –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —É–¥–∞–ª–µ–Ω–Ω–æ–º—É —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é..." $Yellow
git remote -v
Write-ColorOutput ""

# –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –≤–µ—Ç–∫—É –≤ main
Write-ColorOutput "üåø –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –≤–µ—Ç–∫—É –≤ main..." $Yellow
git branch -M main
Test-CommandSuccess "git branch -M main" "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –≤–µ—Ç–∫—É"
Write-ColorOutput "‚úÖ –í–µ—Ç–∫–∞ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∞ –≤ main" $Green

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ç–∫—É
Write-ColorOutput "üåø –¢–µ–∫—É—â–∞—è –≤–µ—Ç–∫–∞:" $Yellow
git branch
Write-ColorOutput ""

# –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞ GitHub
Write-ColorOutput "üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–¥ –Ω–∞ GitHub..." $Yellow
Write-ColorOutput "‚ö†Ô∏è –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å–æ–∑–¥–∞–Ω –Ω–∞ GitHub!" $Yellow
Write-ColorOutput "–°—Å—ã–ª–∫–∞: https://github.com/$GitHubUsername/$RepositoryName" $Cyan
Write-ColorOutput ""
Write-ColorOutput "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..." $Yellow
Read-Host

git push -u origin main
Test-CommandSuccess "git push" "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–¥ –Ω–∞ GitHub"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
Write-ColorOutput "üìä –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è:" $Yellow
git status
Write-ColorOutput ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–¥–∞–ª–µ–Ω–Ω—ã–µ –≤–µ—Ç–∫–∏
Write-ColorOutput "üåø –£–¥–∞–ª–µ–Ω–Ω—ã–µ –≤–µ—Ç–∫–∏:" $Yellow
git branch -r
Write-ColorOutput ""

# –£—Å–ø–µ—à–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
Write-ColorOutput "üéâ –ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–∞ GitHub!" $Green
Write-ColorOutput ""
Write-ColorOutput "üîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π:" $Cyan
Write-ColorOutput "   https://github.com/$GitHubUsername/$RepositoryName" $Cyan
Write-ColorOutput ""
Write-ColorOutput "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:" $Yellow
Write-ColorOutput "   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞ GitHub" $White
Write-ColorOutput "   2. –î–æ–±–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞" $White
Write-ColorOutput "   3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ç–µ–≥–∏ –∏ —Ä–µ–ª–∏–∑—ã" $White
Write-ColorOutput "   4. –î–æ–±–∞–≤—å—Ç–µ Contributors" $White
Write-ColorOutput "   5. –°–æ–∑–¥–∞–π—Ç–µ Issues –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è" $White
Write-ColorOutput "   6. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ GitHub Actions" $White
Write-ColorOutput ""
Write-ColorOutput "‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!" $Green

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
$repoInfo = @{
    GitHubUsername = $GitHubUsername
    RepositoryName = $RepositoryName
    RepositoryUrl = "https://github.com/$GitHubUsername/$RepositoryName"
    UploadDate = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    ProjectPath = $ProjectPath
}

$repoInfoPath = Join-Path $ProjectPath "github_repository_info.json"
$repoInfo | ConvertTo-Json | Out-File -FilePath $repoInfoPath -Encoding UTF8
Write-ColorOutput "üíæ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤: $repoInfoPath" $Cyan
