# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ Bybit Trader
# –ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

param(
    [string]$GitHubUsername = "",
    [string]$GitHubEmail = "",
    [switch]$SkipGitSetup = $false,
    [switch]$SkipConfigSetup = $false
)

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
$Colors = @{
    Success = "Green"
    Warning = "Yellow"
    Error = "Red"
    Info = "Cyan"
    Header = "Magenta"
}

function Write-Header {
    param([string]$Message)
    Write-Host "`n" -NoNewline
    Write-Host "=" * 60 -ForegroundColor $Colors.Header
    Write-Host "  $Message" -ForegroundColor $Colors.Header
    Write-Host "=" * 60 -ForegroundColor $Colors.Header
    Write-Host ""
}

function Write-Success {
    param([string]$Message)
    Write-Host "‚úÖ $Message" -ForegroundColor $Colors.Success
}

function Write-Warning {
    param([string]$Message)
    Write-Host "‚ö†Ô∏è  $Message" -ForegroundColor $Colors.Warning
}

function Write-Error {
    param([string]$Message)
    Write-Host "‚ùå $Message" -ForegroundColor $Colors.Error
}

function Write-Info {
    param([string]$Message)
    Write-Host "‚ÑπÔ∏è  $Message" -ForegroundColor $Colors.Info
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
function Test-Administrator {
    $currentUser = [Security.Principal.WindowsIdentity]::GetCurrent()
    $principal = New-Object Security.Principal.WindowsPrincipal($currentUser)
    return $principal.IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)
}

if (-not (Test-Administrator)) {
    Write-Error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –ó–∞–ø—É—Å—Ç–∏—Ç–µ PowerShell –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."
    exit 1
}

Write-Header "üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ Bybit Trader iOS"

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
Write-Header "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Git
try {
    $gitVersion = git --version
    Write-Success "Git —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $gitVersion"
} catch {
    Write-Error "Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Git —Å https://git-scm.com/"
    Write-Info "–ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Git –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç."
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Xcode (–µ—Å–ª–∏ –Ω–∞ macOS)
if ($IsMacOS) {
    try {
        $xcodeVersion = xcodebuild -version
        Write-Success "Xcode —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $xcodeVersion"
    } catch {
        Write-Warning "Xcode –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Xcode —Å App Store."
    }
} else {
    Write-Info "–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: Windows. Xcode —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ macOS."
}

# 2. –ü–µ—Ä–µ—Ö–æ–¥ –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞
Write-Header "üìÅ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"

$projectPath = "C:\Users\Admin\OneDrive\Desktop\–ù–æ–≤–∞—è –ø–∞–ø–∫–∞ (4)"
if (Test-Path $projectPath) {
    Set-Location $projectPath
    Write-Success "–ü–µ—Ä–µ—à–ª–∏ –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞: $projectPath"
} else {
    Write-Error "–ü–∞–ø–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $projectPath"
    exit 1
}

# 3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git (–µ—Å–ª–∏ –Ω–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ)
if (-not $SkipGitSetup) {
    Write-Header "üë§ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git"
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Git
    if (-not $GitHubUsername) {
        $GitHubUsername = Read-Host "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è GitHub"
    }
    
    if (-not $GitHubEmail) {
        $GitHubEmail = Read-Host "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email –¥–ª—è Git"
    }
    
    git config --global user.name $GitHubUsername
    git config --global user.email $GitHubEmail
    Write-Success "Git –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω: $GitHubUsername <$GitHubEmail>"
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    if (-not (Test-Path ".git")) {
        Write-Info "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
        git init
        Write-Success "Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω"
    } else {
        Write-Info "Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω"
    }
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
    Write-Info "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –≤ Git..."
    git add .
    
    # –ü–µ—Ä–≤—ã–π –∫–æ–º–º–∏—Ç
    Write-Info "–°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –∫–æ–º–º–∏—Ç–∞..."
    git commit -m "Initial commit: Bybit Trader iOS app with complete features"
    Write-Success "–ü–µ—Ä–≤—ã–π –∫–æ–º–º–∏—Ç —Å–æ–∑–¥–∞–Ω"
    
    # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –≤–µ—Ç–∫–∏
    git branch -M main
    Write-Success "–û—Å–Ω–æ–≤–Ω–∞—è –≤–µ—Ç–∫–∞ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∞ –≤ main"
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    Write-Header "üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"
    Write-Info "–°–æ–∑–¥–∞–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞ GitHub:"
    Write-Info "1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://github.com"
    Write-Info "2. –ù–∞–∂–º–∏—Ç–µ 'New repository'"
    Write-Info "3. –ù–∞–∑–≤–∞–Ω–∏–µ: BybitTrader-iOS"
    Write-Info "4. –û–ø–∏—Å–∞–Ω–∏–µ: Professional iOS trading app for Bybit"
    Write-Info "5. –í—ã–±–µ—Ä–∏—Ç–µ Public –∏–ª–∏ Private"
    Write-Info "6. –ù–ï —Å—Ç–∞–≤—å—Ç–µ –≥–∞–ª–æ—á–∫–∏ –Ω–∞ README, .gitignore, license"
    Write-Info "7. –ù–∞–∂–º–∏—Ç–µ 'Create repository'"
    
    $repoUrl = Read-Host "–í–≤–µ–¥–∏—Ç–µ URL –≤–∞—à–µ–≥–æ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"
    
    if ($repoUrl) {
        git remote add origin $repoUrl
        Write-Success "–£–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –¥–æ–±–∞–≤–ª–µ–Ω"
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–¥–∞
        Write-Info "–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–¥–∞ –Ω–∞ GitHub..."
        git push -u origin main
        
        if ($LASTEXITCODE -eq 0) {
            Write-Success "–ö–æ–¥ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ GitHub!"
        } else {
            Write-Warning "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–æ–¥–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è."
        }
    }
}

# 4. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (–µ—Å–ª–∏ –Ω–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ)
if (-not $SkipConfigSetup) {
    Write-Header "‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    
    Write-Info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    $configErrors = @()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Bybit API –∫–ª—é—á–µ–π
    $configFile = "BybitTrader\Config.swift"
    if (Test-Path $configFile) {
        $configContent = Get-Content $configFile -Raw
        
        if ($configContent -match 'YOUR_BYBIT_API_KEY') {
            $configErrors += "Bybit API Key –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
        }
        
        if ($configContent -match 'YOUR_BYBIT_API_SECRET') {
            $configErrors += "Bybit API Secret –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
        }
        
        if ($configContent -match 'YOUR_BYBIT_TESTNET_API_KEY') {
            $configErrors += "Bybit Testnet API Key –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
        }
        
        if ($configContent -match 'YOUR_BYBIT_TESTNET_API_SECRET') {
            $configErrors += "Bybit Testnet API Secret –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
        }
        
        if ($configContent -match 'sk-UJSfLa_vaSuXl4zi5rVbxw') {
            $configErrors += "AI Chat API Key –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
        }
        
        if ($configErrors.Count -gt 0) {
            Write-Warning "–ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:"
            foreach ($error in $configErrors) {
                Write-Warning "  - $error"
            }
            
            Write-Info "`n–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ API –∫–ª—é—á–µ–π:"
            Write-Info "1. –û—Ç–∫—Ä–æ–π—Ç–µ BybitTrader\Config.swift"
            Write-Info "2. –ó–∞–º–µ–Ω–∏—Ç–µ placeholder –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –∫–ª—é—á–∏"
            Write-Info "3. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ñ–∞–π–ª"
        } else {
            Write-Success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞ - –≤—Å–µ API –∫–ª—é—á–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
        }
    } else {
        Write-Error "–§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: $configFile"
    }
}

# 5. –°–æ–∑–¥–∞–Ω–∏–µ .gitignore
Write-Header "üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∞ .gitignore"

if (-not (Test-Path ".gitignore")) {
    Write-Info "–°–æ–∑–¥–∞–Ω–∏–µ .gitignore —Ñ–∞–π–ª–∞..."
    
    $gitignoreContent = @"
# Xcode
.DS_Store
*/build/*
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3
xcuserdata
*.xccheckout
*.moved-aside
DerivedData
.idea/
*.hmap
*.ipa
*.xcuserstate
project.xcworkspace

# CocoaPods
Pods/
Podfile.lock

# Carthage
Carthage/Build

# fastlane
fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots
fastlane/test_output

# Code Injection
iOSInjectionProject/

# Environment variables
.env
.env.local

# Logs
*.log

# Temporary files
*.tmp
*.temp

# Build artifacts
build/
DerivedData/
*.ipa
*.dSYM.zip
*.dSYM

# Swift Package Manager
.build/
Packages/
Package.pins
Package.resolved
*.xcodeproj

# App packaging
*.ipa
*.dSYM.zip
*.dSYM

# Playgrounds
timeline.xctimeline
playground.xcworkspace

# User-specific files
*.xcuserstate
*.xcuserdata
*.xcscmblueprint
*.xccheckout
*.moved-aside
*.pbxuser
!default.pbuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3

# API Keys and Secrets (IMPORTANT!)
Config.swift
*APIKey*
*Secret*
*Token*
*Password*

# Database files
*.sqlite
*.sqlite3
*.db

# Crash logs
*.crash

# Performance data
*.trace

# Coverage data
*.gcda
*.gcno

# Profiling data
*.prof

# Backup files
*.bak
*.backup

# OS generated files
Thumbs.db
ehthumbs.db
Desktop.ini

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# Package manager files
yarn.lock
package-lock.json
composer.lock

# Test results
test-results/
coverage/

# Documentation build
docs/_build/

# Jupyter Notebook
.ipynb_checkpoints

# pyenv
.python-version

# pipenv
Pipfile.lock

# PEP 582
__pypackages__/

# Celery
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# Node.js
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage
.grunt

# Bower dependency directory
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons
build/Release

# Dependency directories
node_modules/
jspm_packages/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env
.env.development.local
.env.test.local
.env.production.local
.env.local

# parcel-bundler cache
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
public

# Storybook build outputs
.out
.storybook-out
storybook-static

# Temporary folders
tmp/
temp/

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

# Local Netlify folder
.netlify

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*
"@
    
    $gitignoreContent | Out-File -FilePath ".gitignore" -Encoding UTF8
    Write-Success ".gitignore —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω"
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ .gitignore –≤ Git
    if (-not $SkipGitSetup) {
        git add .gitignore
        git commit -m "Add .gitignore for iOS project"
        Write-Success ".gitignore –¥–æ–±–∞–≤–ª–µ–Ω –≤ Git"
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        if (git remote get-url origin) {
            git push origin main
            Write-Success "–ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ GitHub"
        }
    }
} else {
    Write-Info ".gitignore —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
}

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
Write-Header "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞"

$requiredFiles = @(
    "BybitTrader.xcodeproj",
    "BybitTrader\BybitTraderApp.swift",
    "BybitTrader\ContentView.swift",
    "BybitTrader\Config.swift",
    "BybitTrader\Services\",
    "BybitTrader\Models\",
    "BybitTrader\Views\",
    "README.md",
    "bitrise.yml",
    "exportOptions.plist",
    "exportOptionsAdHoc.plist"
)

$missingFiles = @()
foreach ($file in $requiredFiles) {
    if (Test-Path $file) {
        Write-Success "‚úì $file"
    } else {
        Write-Warning "‚úó $file (–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç)"
        $missingFiles += $file
    }
}

if ($missingFiles.Count -gt 0) {
    Write-Warning "`n–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞."
}

# 7. –§–∏–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
Write-Header "üéØ –§–∏–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞"

Write-Info "–ü—Ä–æ–µ–∫—Ç Bybit Trader iOS –Ω–∞—Å—Ç—Ä–æ–µ–Ω!"
Write-Info ""

Write-Info "–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
Write-Info "1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ API –∫–ª—é—á–∏ –≤ BybitTrader\Config.swift"
Write-Info "2. –û—Ç–∫—Ä–æ–π—Ç–µ BybitTrader.xcodeproj –≤ Xcode"
Write-Info "3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Team –∏ Bundle Identifier"
Write-Info "4. –°–æ–±–µ—Ä–∏—Ç–µ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç"
Write-Info ""

Write-Info "–ü–æ–ª–µ–∑–Ω—ã–µ —Ñ–∞–π–ª—ã:"
Write-Info "- SETUP_INSTRUCTIONS.md - –ø–æ–¥—Ä–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ"
Write-Info "- github_commands.md - –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å GitHub"
Write-Info "- quick_start_commands.bat - –±—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç –¥–ª—è Windows"
Write-Info ""

Write-Info "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏:"
Write-Info "- –°–æ–∑–¥–∞–π—Ç–µ Issue –≤ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏"
Write-Info "- –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –ø—Ä–æ–µ–∫—Ç–∞"
Write-Info ""

Write-Success "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –£–¥–∞—á–∏ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!"

# –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å Git
if (-not $SkipGitSetup) {
    Write-Header "üìä –°—Ç–∞—Ç—É—Å Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"
    git status
    Write-Info ""
    git remote -v
}

Write-Header "üèÅ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ"
Write-Info "–ù–∞–∂–º–∏—Ç–µ –ª—é–±—É—é –∫–ª–∞–≤–∏—à—É –¥–ª—è –≤—ã—Ö–æ–¥–∞..."
$null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")
